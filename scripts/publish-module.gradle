apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
	archiveClassifier.set('sources')
	if (project.plugins.findPlugin("com.android.library")) {
		// For Android libraries
		from android.sourceSets.main.java.srcDirs
		from android.sourceSets.main.kotlin.srcDirs
	} else {
		// For pure Kotlin libraries, in case you have them
		from sourceSets.main.java.srcDirs
		from sourceSets.main.kotlin.srcDirs
	}
}

artifacts {
	archives androidSourcesJar
}

afterEvaluate {
	publishing {
		publications {
			release(MavenPublication) {
				// мы позже добавимм эти константы в другом файле
				groupId PUBLISH_GROUP_ID
				artifactId PUBLISH_ARTIFACT_ID
				version PUBLISH_VERSION

				// Two artifacts, the `aar` (or `jar`) and the sources
				if (project.plugins.findPlugin("com.android.library")) {
					from components.release
				} else {
					from components.java
				}

				artifact androidSourcesJar

				// Mostly self-explanatory metadata
				pom {
					name = PUBLISH_ARTIFACT_ID
					// описание нашей библиотеки
					description = 'Java client for OnlineSIM API (http://onlinesim.ru)'
					// ссылка на сайт либы или на Github
					url = 'https://github.com/s00d/onlinesim-java-api'
					licenses {
						license {
							name = 'Apache License 2.0'
							// также вам нужно создать лицензию для своей либы
							// я скопировал ее из Open Source проекта
							url = 'https://github.com/KiberneticWorm/Awesome-Buttons/blob/master/LICENSE.txt'
						}
					}
					developers {
						developer {
							// далее указывает id, имя и почту разработчика
							id 's00d'
							name 'Pavel Kuzmin'
							email 'Virus191288@gmail.com'
						}

					}

					scm {
						// информация о библиотеки на Github'е
						connection = 'scm:github.com/s00d/onlinesim-java-api.git'
						developerConnection = 'scm:git:ssh://github.com/s00d/onlinesim-java-api.git'
						url = 'https://github.com/s00d/onlinesim-java-api/tree/main'
					}
				}
			}
		}
	}
}

signing {
	useInMemoryPgpKeys(
			rootProject.ext["signing.keyId"],
			rootProject.ext["signing.key"],
			rootProject.ext["signing.password"],
	)
	sign publishing.publications
}
